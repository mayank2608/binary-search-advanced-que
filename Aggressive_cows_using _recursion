bool is_possible(int mid,vector<int> &stalls, int k){
int cowcount=1;
    int last_position =0;
    for(int i=0;i<stalls.size();i++){

    if((stalls[i]-stalls[last_position])>=mid){
   cowcount++;
        last_position=i;
        if(cowcount==k)
            return true;
    }
        }
    return false;
}

int binary_search(int start,int end,vector<int> &stalls, int k,int ans){
    int mid=start+(end-start)/2;
     if(start>end){
         return ans;
     }  
        if(is_possible(mid,stalls,k)){
        ans=mid;
           return  binary_search(mid+1,end,stalls,k,ans);
        }
        else
          return  binary_search(start,mid-1,stalls,k,ans);
    
  
}
int aggressiveCows(vector<int> &stalls, int k)
{
    //    Write your code here.
    sort(stalls.begin(),stalls.end());
  
        int start=0,mid,ans;
    int end=stalls[stalls.size()-1]-stalls[0];
    
    return binary_search(start,end,stalls,k,ans);
    
}
